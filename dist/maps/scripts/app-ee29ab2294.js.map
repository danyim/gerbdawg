{"version":3,"sources":["scripts/app-ee29ab2294.js"],"names":["angular","module","acmeMalarkey","malarkey","linkFunc","scope","el","attr","vm","watcher","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","forEach","values","value","type","$on","MalarkeyController","$log","githubContributor","activate","$inject","directive","restrict","template","link","controller","controllerAs","$http","getContributors","limit","getContributorsComplete","response","data","getContributorsFailed","error","toJson","get","apiHost","then","service","factory","MainController","$scope","$firebaseArray","$sanitize","sayings","ref","log","addSaying","gerbMessage","dawgMessage","$add","this","randomSaying","Firebase","AddController","$window","toastr","newSaying","success","removeSaying","saying","confirm","$remove","runBlock","run","routerConfig","$stateProvider","$urlRouterProvider","state","url","templateUrl","otherwise","config","constant","moment","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app-ee29ab2294.js","sourcesContent":["// (function() {\r\n//   'use strict';\r\n\r\n//   angular\r\n//       .module('gerbsDawg')\r\n//       .service('webDevTec', webDevTec);\r\n\r\n//   /** @ngInject */\r\n//   function webDevTec() {\r\n//     var data = [\r\n//       {\r\n//         'title': 'AngularJS',\r\n//         'url': 'https://angularjs.org/',\r\n//         'description': 'HTML enhanced for web apps!',\r\n//         'logo': 'angular.png'\r\n//       },\r\n//       {\r\n//         'title': 'BrowserSync',\r\n//         'url': 'http://browsersync.io/',\r\n//         'description': 'Time-saving synchronised browser testing.',\r\n//         'logo': 'browsersync.png'\r\n//       },\r\n//       {\r\n//         'title': 'GulpJS',\r\n//         'url': 'http://gulpjs.com/',\r\n//         'description': 'The streaming build system.',\r\n//         'logo': 'gulp.png'\r\n//       },\r\n//       {\r\n//         'title': 'Jasmine',\r\n//         'url': 'http://jasmine.github.io/',\r\n//         'description': 'Behavior-Driven JavaScript.',\r\n//         'logo': 'jasmine.png'\r\n//       },\r\n//       {\r\n//         'title': 'Karma',\r\n//         'url': 'http://karma-runner.github.io/',\r\n//         'description': 'Spectacular Test Runner for JavaScript.',\r\n//         'logo': 'karma.png'\r\n//       },\r\n//       {\r\n//         'title': 'Protractor',\r\n//         'url': 'https://github.com/angular/protractor',\r\n//         'description': 'End to end test framework for AngularJS applications built on top of WebDriverJS.',\r\n//         'logo': 'protractor.png'\r\n//       },\r\n//       {\r\n//         'title': 'Bootstrap',\r\n//         'url': 'http://getbootstrap.com/',\r\n//         'description': 'Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web.',\r\n//         'logo': 'bootstrap.png'\r\n//       },\r\n//       {\r\n//         'title': 'Angular UI Bootstrap',\r\n//         'url': 'http://angular-ui.github.io/bootstrap/',\r\n//         'description': 'Bootstrap components written in pure AngularJS by the AngularUI Team.',\r\n//         'logo': 'ui-bootstrap.png'\r\n//       },\r\n//       {\r\n//         'title': 'Sass (Node)',\r\n//         'url': 'https://github.com/sass/node-sass',\r\n//         'description': 'Node.js binding to libsass, the C version of the popular stylesheet preprocessor, Sass.',\r\n//         'logo': 'node-sass.png'\r\n//       }\r\n//     ];\r\n\r\n//     this.getTec = getTec;\r\n\r\n//     function getTec() {\r\n//       return data;\r\n//     }\r\n//   }\r\n\r\n// })();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('gerbsDawg', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ui.router', 'ui.bootstrap', 'toastr', 'firebase']);\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('gerbsDawg')\r\n    .directive('acmeMalarkey', acmeMalarkey);\r\n\r\n  /** @ngInject */\r\n  function acmeMalarkey(malarkey) {\r\n    var directive = {\r\n      restrict: 'E',\r\n      scope: {\r\n        values: '='\r\n      },\r\n      template: '&nbsp;',\r\n      link: linkFunc,\r\n      controller: MalarkeyController,\r\n      controllerAs: 'vm'\r\n    };\r\n\r\n    return directive;\r\n\r\n    function linkFunc(scope, el, attr, vm) {\r\n      var watcher;\r\n      var typist = malarkey(el[0], {\r\n        typeSpeed: 80,\r\n        deleteSpeed: 40,\r\n        pauseDelay: 800,\r\n        loop: false,\r\n        postfix: ' '\r\n      });\r\n\r\n      el.addClass('acme-malarkey');\r\n\r\n      angular.forEach(scope.values, function(value) {\r\n        typist.type(value);\r\n      });\r\n\r\n      // watcher = scope.$watch('vm.contributors', function() {\r\n      //   angular.forEach(vm.contributors, function(contributor) {\r\n      //     typist.type(contributor.login).pause().delete();\r\n      //   });\r\n      // });\r\n\r\n      scope.$on('$destroy', function () {\r\n        watcher();\r\n      });\r\n    }\r\n\r\n    /** @ngInject */\r\n    function MalarkeyController($log, githubContributor) {\r\n      var vm = this;\r\n\r\n      activate();\r\n\r\n      function activate() {\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('gerbsDawg')\r\n    .factory('githubContributor', githubContributor);\r\n\r\n  /** @ngInject */\r\n  function githubContributor($log, $http) {\r\n    var apiHost = 'https://api.github.com/repos/Swiip/generator-gulp-angular';\r\n\r\n    var service = {\r\n      apiHost: apiHost,\r\n      getContributors: getContributors\r\n    };\r\n\r\n    return service;\r\n\r\n    function getContributors(limit) {\r\n      if (!limit) {\r\n        limit = 30;\r\n      }\r\n\r\n      return $http.get(apiHost + '/contributors?per_page=' + limit)\r\n        .then(getContributorsComplete)\r\n        .catch(getContributorsFailed);\r\n\r\n      function getContributorsComplete(response) {\r\n        return response.data;\r\n      }\r\n\r\n      function getContributorsFailed(error) {\r\n        $log.error('XHR Failed for getContributors.\\n' + angular.toJson(error.data, true));\r\n      }\r\n    }\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('gerbsDawg')\r\n    .controller('MainController', MainController);\r\n\r\n  /** @ngInject */\r\n  function MainController($scope, $firebaseArray, $log, $sanitize) {\r\n    var vm = this;\r\n\r\n    vm.sayings = [];\r\n    vm.addSaying = addSaying;\r\n    vm.randomSaying = '';\r\n    var ref = new Firebase('https://gerbsdawg.firebaseio.com/sayings');\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      vm.sayings = $firebaseArray(ref);\r\n      $log.log(vm.sayings);\r\n\r\n      // seedData();\r\n    }\r\n\r\n    function seedData() {\r\n      vm.addSaying('Ask questions', 'Answers questions you haven\\'t even thought to ask');\r\n    }\r\n\r\n    function addSaying(gerbMessage, dawgMessage) {\r\n      vm.sayings.$add({\r\n        gerbMessage: gerbMessage,\r\n        dawgMessage: dawgMessage\r\n      });\r\n    }\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('gerbsDawg')\r\n    .controller('AddController', AddController);\r\n\r\n  /** @ngInject */\r\n  function AddController($firebaseArray, $window, toastr) {\r\n    var vm = this;\r\n\r\n    vm.sayings = [];\r\n    vm.addSaying = addSaying;\r\n    vm.removeSaying = removeSaying;\r\n    vm.newSaying = {};\r\n    var ref = new Firebase('https://gerbsdawg.firebaseio.com/sayings');\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.sayings = $firebaseArray(ref);\r\n    }\r\n\r\n    function addSaying() {\r\n      vm.sayings.$add(vm.newSaying);\r\n      vm.newSaying = {};\r\n      toastr.success('New saying added.');\r\n    }\r\n\r\n    function removeSaying(saying) {\r\n      if($window.confirm('Are you sure you want to remove this?')) {\r\n        vm.sayings.$remove(saying);\r\n        toastr.error('Saying removed.');\r\n      }\r\n    }\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('gerbsDawg')\r\n    .run(runBlock);\r\n\r\n  /** @ngInject */\r\n  function runBlock($log) {\r\n\r\n    // $log.debug('runBlock end');\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('gerbsDawg')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider\r\n      .state('home', {\r\n        url: '/',\r\n        templateUrl: 'app/main/main.html',\r\n        controller: 'MainController',\r\n        controllerAs: 'vm'\r\n      })\r\n      .state('add', {\r\n        url: '/add',\r\n        templateUrl: 'app/add/add.html',\r\n        controller: 'AddController',\r\n        controllerAs: 'vm'\r\n      });\r\n\r\n    $urlRouterProvider.otherwise('/');\r\n  }\r\n\r\n})();\r\n\n/* global malarkey:false, moment:false */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('gerbsDawg')\r\n    .constant('malarkey', malarkey)\r\n    .constant('moment', moment);\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('gerbsDawg')\r\n    .config(config);\r\n\r\n  /** @ngInject */\r\n  function config($logProvider, toastrConfig) {\r\n    // Enable log\r\n    $logProvider.debugEnabled(true);\r\n\r\n    // Set options third-party lib\r\n    toastrConfig.allowHtml = true;\r\n    toastrConfig.timeOut = 2000;\r\n    toastrConfig.positionClass = 'toast-top-right';\r\n    toastrConfig.preventDuplicates = true;\r\n    toastrConfig.progressBar = false;\r\n  }\r\n\r\n})();\r\n\nangular.module(\"gerbsDawg\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/add/add.html\",\"<div class=\\\"container-fluid fill\\\"><div class=\\\"row\\\"><div class=\\\"col-lg-6 text-center gerb\\\"><img class=\\\"img\\\" src=\\\"assets/images/gerb.png\\\"><h1>Gerbs</h1></div><div class=\\\"col-lg-6 text-center dawg\\\"><img class=\\\"img\\\" src=\\\"assets/images/dawg.png\\\"><h1>The Big Dawg</h1></div></div><div class=\\\"row\\\"><div class=\\\"col-lg-8 col-lg-offset-2 fill\\\"><div class=\\\"panel panel-primary\\\"><div class=\\\"panel-heading\\\">Add/Edit Sayings</div><div class=\\\"panel-body\\\"><p>This will sync and update automatically as you type. All hail Firebase. The Big Dawg approves. Or be a Gerb and <strong><a ui-sref=\\\"home\\\">go back home</a></strong>.</p><table class=\\\"table table-condensed\\\"><thead><th>Things Gerbs would say</th><th>Things The Big Dawg says</th><th></th></thead><tbody><tr class=\\\"info\\\"><td><input class=\\\"form-control\\\" ng-model=\\\"vm.newSaying.gerbMessage\\\" ng-change=\\\"vm.sayings.$save()\\\" type=\\\"text\\\" placeholder=\\\"Gerbs would say...\\\"></td><td><input class=\\\"form-control\\\" ng-model=\\\"vm.newSaying.dawgMessage\\\" ng-change=\\\"vm.sayings.$save()\\\" placeholder=\\\"The Big Dawg would say...\\\"></td><td><button class=\\\"btn btn-success\\\" ng-click=\\\"vm.addSaying()\\\">Add</button></td></tr><tr ng-repeat=\\\"saying in vm.sayings\\\"><td><input class=\\\"form-control\\\" ng-model=\\\"saying.gerbMessage\\\" ng-change=\\\"vm.sayings.$save(saying)\\\" type=\\\"text\\\"></td><td><input class=\\\"form-control\\\" ng-model=\\\"saying.dawgMessage\\\" ng-change=\\\"vm.sayings.$save(saying)\\\"></td><td><button class=\\\"btn btn-danger\\\" ng-click=\\\"vm.removeSaying(saying)\\\">Remove</button></td></tr></tbody></table></div></div></div></div></div>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=\\\"container-fluid fill\\\"><div class=\\\"row fill\\\"><div class=\\\"col-lg-6 fill text-center gerb\\\"><img class=\\\"img\\\" src=\\\"assets/images/gerb.png\\\"><h1>Gerbs</h1><div ng-repeat=\\\"saying in vm.sayings\\\" class=\\\"saying animate\\\">...<span ng-bind-html=\\\"saying.gerbMessage\\\"></span></div></div><div class=\\\"col-lg-6 fill text-center dawg\\\"><img class=\\\"img\\\" src=\\\"assets/images/dawg.png\\\"><h1>The Big Dawg</h1><div ng-repeat=\\\"saying in vm.sayings\\\" class=\\\"saying animate\\\">...<span ng-bind-html=\\\"saying.dawgMessage\\\"></span></div></div></div></div>\");}]);"],"sourceRoot":"/source/"}